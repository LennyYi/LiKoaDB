IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID = object_id('dbo.UspGNOVACalSD') and sysstat & 0xf = 4)
	DROP PROCEDURE dbo.UspGNOVACalSD
GO

CREATE PROCEDURE dbo.UspGNOVACalSD
( 	
	@cNovaReqno varchar(30)
)
AS
/*******************************************************************
	AIA CONFIDENTIAL MARCH 2000

	COMPASS 2000 USER STORED PROCEDURE

	STORED PROCEDURE USED FOR Calculate type 2 stampt duty - AU
	
	AUTHOR		:	Hinson Liang
	DATE		:	01/15/2015
	
REVISION LOG:
PDCF		PROGRAMMER	DATE		CTRL No.	PURPOSE
------------------------------------------------------------------------------------------
			Hinson.L	01/15/2015				Initial
			Hinson.L	03/05/2015				Growth premium calculation by growth definition
			Hinson.L	03/26/2015				add field [HEADCOUNT]
*********************************************************************/

DECLARE @dMonthEnd DATETIME

DECLARE @cPOLNO	CHAR(10)
DECLARE @dBILLPRDFR DATETIME
DECLARE @cGrowthDef VARCHAR(20)
DECLARE @dASSIGNDATE DATETIME

SELECT @cPOLNO = POLNO, @dBILLPRDFR = BILLPRDFR, @cGrowthDef = GROWTHDEF, @dASSIGNDATE = ASSIGNDATE FROM TNOVA_SDRequest WHERE NOVAREQNO = @cNovaReqno

SELECT @dMonthEnd = DATEADD(DD,-1,CONVERT(DATETIME,CONVERT(CHAR(06),DATEADD(MM,1,@dBILLPRDFR),112) + '01'))

--Create table
SELECT * INTO #TNOVA_SDPremSum FROM TNOVA_SDPremSum WHERE 1<>1

IF @cGrowthDef = '1'	--Growth is defined as case that mark as 'New Member'
BEGIN
	INSERT #TNOVA_SDPremSum
	(NOVAREQNO,POLNO,BILLPRDFR,PRODCODE,PRODSHORT,[STATE],PREMPAID,PREMANNGROW,HEADCOUNT)
	SELECT NOVAREQNO,POLNO,BILLPRDFR,A.PRODCODE,PRODSHORT,[STATE],SUM(PaidPrem),SUM(CASE A.CHGSTATUS WHEN 'ADD' THEN PaidPrem ELSE 0 END),COUNT(DISTINCT IdentifyID) FROM TNOVA_SDMemPremDtl A, TPRODUCT B
	WHERE A.NOVAREQNO = @cNovaReqno
	AND B.PRODCODE = A.PRODCODE
	GROUP BY NOVAREQNO,POLNO,BILLPRDFR,A.PRODCODE,PRODSHORT,[STATE]
END
ELSE			--Growth is defined as case that date joined in current policy year
BEGIN
	INSERT #TNOVA_SDPremSum
	(NOVAREQNO,POLNO,BILLPRDFR,PRODCODE,PRODSHORT,[STATE],PREMPAID,PREMANNGROW,HEADCOUNT)
	SELECT NOVAREQNO,POLNO,BILLPRDFR,A.PRODCODE,PRODSHORT,[STATE],SUM(PaidPrem),SUM(CASE WHEN INIEFFDT >= @dASSIGNDATE THEN PaidPrem ELSE 0 END),COUNT(DISTINCT IdentifyID) FROM TNOVA_SDMemPremDtl A, TPRODUCT B
	WHERE A.NOVAREQNO = @cNovaReqno
	AND B.PRODCODE = A.PRODCODE
	GROUP BY NOVAREQNO,POLNO,BILLPRDFR,A.PRODCODE,PRODSHORT,[STATE]
END

--Calculate Apportion %
DECLARE @nTotalHeadcounts INT
SELECT @nTotalHeadcounts = COUNT(DISTINCT IdentifyID) FROM TNOVA_SDMemPremDtl WHERE NOVAREQNO = @cNovaReqno
SELECT NOVAREQNO,POLNO,BILLPRDFR,[STATE],ROUND(CONVERT(FLOAT,COUNT(DISTINCT IdentifyID))/@nTotalHeadcounts,4) AS ApportionPCT INTO #ApportionPCT
FROM TNOVA_SDMemPremDtl
WHERE NOVAREQNO = @cNovaReqno
GROUP BY NOVAREQNO,POLNO,BILLPRDFR,[STATE]

UPDATE A
SET A.ApportionPCT = B.ApportionPCT
FROM #TNOVA_SDPremSum A, #ApportionPCT B
WHERE A.NOVAREQNO = B.NOVAREQNO
AND A.POLNO = B.POLNO
AND A.BILLPRDFR = B.BILLPRDFR
AND A.[STATE] = B.[STATE]

--Calculate Stamp Duty%, CALCBASIS, NETOFFPCT
UPDATE A
SET StmpDutyPCT = B.TAXPCT/100,CALCBASIS = B.CALCBASIS,NETOFFPCT = B.NETOFFPCT
FROM #TNOVA_SDPremSum A, TSTMPDUTYRT_AU B
WHERE B.STATE = A.STATE
AND B.PRODCODE = A.PRODCODE
AND B.EFFDATE   = (
	SELECT MAX(B1.EFFDATE)
	FROM TSTMPDUTYRT_AU B1
	WHERE B1.STATE = B.STATE
	AND B1.PRODCODE = B.PRODCODE
	and B1.EFFDATE <= @dMonthEnd
    )

--Update FYRENCODE
--20150303 BEGIN: Follow the original logic, FYP: F; AP: R
--UPDATE A
--SET A.FYRENCODE = B.FYRENCODE
--FROM #TNOVA_SDPremSum A, TBILDETP B
--WHERE B.POLNO = A.POLNO
--AND B.PRODCODE = A.PRODCODE
--AND B.BILLPRDFR = A.BILLPRDFR
--AND B.RCDSTS = 'A'

UPDATE #TNOVA_SDPremSum SET FYRENCODE = CASE CALCBASIS WHEN 'FYP' THEN 'F' ELSE 'R' END
--20150303 END

--20150311 BEGIN: Only FYP need growth premium
UPDATE #TNOVA_SDPremSum SET PREMANNGROW = 0 WHERE CALCBASIS <> 'FYP'
--20150311 END

--Calculate SD (Same as online click "Calculate")
UPDATE #TNOVA_SDPremSum
SET STMPDUTYPAID = CASE CALCBASIS WHEN 'FYP' THEN PREMANNGROW/NETOFFPCT*StmpDutyPCT ELSE PREMPAID/NETOFFPCT*StmpDutyPCT END

DELETE TNOVA_SDPremSum WHERE NOVAREQNO = @cNovaReqno
INSERT TNOVA_SDPremSum SELECT * FROM #TNOVA_SDPremSum

DROP TABLE #ApportionPCT
DROP TABLE #TNOVA_SDPremSum

RETURN


